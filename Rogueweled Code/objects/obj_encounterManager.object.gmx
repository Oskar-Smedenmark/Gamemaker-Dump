<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enemies = ds_list_create();
encounter = irandom(encounters.threeEnemies);

yStart = 250;

turnList = ds_list_create();
ds_list_add(turnList, instance_create(room_width/3, yStart, obj_hero));
turnPos = 0;
lastMyTurn = false;
currentPlayer = turnList[| turnPos];

target = noone;

switch(encounter)
{
    case encounters.oneEnemy:
        ds_list_add(enemies, instance_create(room_width - room_width/3, yStart, obj_enemy_slime));
    break;
    case encounters.twoEnemies:
        ds_list_add(enemies, instance_create(room_width - room_width/3, yStart,obj_enemy_slime));
        ds_list_add(enemies, instance_create(room_width - room_width/3 + sprite_get_width(spr_enemy_slime) + 100, yStart + 50, obj_enemy_slime));
    break;
    case encounters.threeEnemies:
        ds_list_add(enemies, instance_create(room_width - room_width/3, yStart,obj_enemy_slime));
        ds_list_add(enemies, instance_create(room_width - room_width/3 + sprite_get_width(spr_enemy_slime) + 100, yStart + 50, obj_enemy_slime));
        ds_list_add(enemies, instance_create(room_width - room_width/3 + 2*sprite_get_width(spr_enemy_slime) + 2*100, yStart, obj_enemy_slime));
    break;
    case encounters.gemLoot:
        
    break;
}

for(var i = 0; i &lt; ds_list_size(enemies); i++)
{
    ds_list_add(turnList, enemies[| i]);
}

target = turnList[| 1];

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enums
enum encounters
{
    oneEnemy,
    twoEnemies,
    threeEnemies,
    gemLoot
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentPlayer = turnList[| turnPos];
if(instance_exists(currentPlayer))
{
    if(!currentPlayer.myTurn &amp;&amp; !lastMyTurn)
    {
        currentPlayer.myTurn = true;
        lastMyTurn = true;
    }
    else if(!currentPlayer.myTurn &amp;&amp; lastMyTurn)
    {
        if(is_turn_over())
        {
            increaseTurnPos();
        }
    }
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
