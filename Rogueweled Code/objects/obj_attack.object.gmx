<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_attack_white</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 0;
depth = -999;
startMovingCounter = 0;
spd = 0.12;
damage = 0;
attackElement = Element.white;

attackParticle = noone;

target = noone;

spawner = noone;

image_alpha = 0;

bow = y+random_range(-400,400);
bowSpeed = 0.04;

destroyed = false;
destroyedDelay = room_speed*8;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!destroyed)
{
    if(target == noone || !instance_exists(target))
    {
        destroyed = true;
    }
    else
    {
        startMovingCounter--;
        if(startMovingCounter &lt;= 0)
        {
            var targetX = target.x;
            var targetY = target.y;
            x = lerp(x, targetX, spd);
            y = lerp(y, targetY, spd);
            y = lerp(y, bow, spd);
            bow = lerp(bow, targetY, bowSpeed);
            part_particles_create(global.P_System, x, y, attackParticle, 2);
            var targetColl = instance_place(x,y,target);
            if(targetColl != noone)
            {
                deal_damage(damage, attackElement, target);
                part_particles_create(global.P_System, targetX, targetY, attackParticle, 50);
                destroyed = true;
            }
        }
    }
}
else
{
    destroyedDelay--;
    image_alpha = 0;
    if(destroyedDelay &lt;= 0)
    {
        part_particles_clear(attackParticle);
        part_type_destroy(attackParticle);
        instance_destroy();
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
