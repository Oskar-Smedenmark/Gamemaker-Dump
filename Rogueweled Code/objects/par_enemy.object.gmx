<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = irandom_range(10,200);
attackType = Element.white;
damageMax = 0;
damageMin = 0;
armorMax = 0;
armorMin = 0;
damage[0] = 0;
armor[0] = 0;
for(var i = 0; i &lt; elements_size(); i++)
{
    damage[i] = 0;
    armor[i] = 0;
}

myTurn = false;
attacked = false;
attackSpeed = 0.125;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!instance_exists(obj_attack))
{
    hp = floor(hp);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(myTurn)
{
    if(!attacked)
    {
        var attacksToSpawn = floor(damage[0]/3);
        for(var i = 0; i &lt; attacksToSpawn; i++)
        {
            attack_target(x,y,obj_hero, 3,i*room_speed*attackSpeed,Element.red);
        }
        if(damage[0]%3 != 0)
        {
            attack_target(x,y,obj_hero, damage[0]%3, (attacksToSpawn+1)*room_speed*attackSpeed,Element.red);
        }
        attacked = true;
        damage[0] = irandom_range(damageMin,damageMax);
    }
    else
    {
        if(is_turn_over())
        {
            myTurn = false;
            attacked = false;
        }
    }
}
if(hp &lt;= 0 &amp;&amp; is_turn_over())
{
    removeFromTurnList(id);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(live_call()) return live_result;
draw_self();
draw_set_font(fnt_normal);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_text(x, y - 50, "Health: " + string(hp));
draw_text(x, y - 85, "Damage: " + string(damage[0]));

if(no_more_armor(id) != -1)
{
    var curIndex = 0;
    var amountOfArmors = floor(no_more_armor(id)/2);
    draw_set_font(fnt_small);
    draw_set_halign(fa_center);
    for(var i = 0; i &lt; elements_size(); i++)
    {
        if(armor[i] &gt; 0)
        {
            if(i == 0 || i == 5)
            {
                draw_set_color(c_black);
            }
            else
            {
                draw_set_color(c_white);
            }
            draw_sprite_ext(spr_defence_elements, i, x + curIndex*33 - amountOfArmors*32, y - sprite_get_height(sprite_index)/2 - 32, 1, 1, 0, c_white, 1);
            draw_text(x + curIndex*33 - amountOfArmors*32, y - sprite_get_height(sprite_index)/2 - 46, string(armor[i]));
            curIndex++;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
