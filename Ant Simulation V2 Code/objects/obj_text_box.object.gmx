<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite13</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
text = "";
padding = 0;
textX = 0;
textY = 0;
boxRX = 0;
boxRY = 0;
boxColour = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var leftClick = mouse_check_button_pressed(mb_left);

if(leftClick)
{
    if(window_view_mouse_get_x(0) &gt;= x &amp;&amp; window_view_mouse_get_y(0) &gt;= y &amp;&amp; window_view_mouse_get_x(0) &lt;= boxRX &amp;&amp; window_view_mouse_get_y(0) &lt;= boxRY)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the box and text

//Create the box
draw_rectangle_colour(x, y, boxRX, boxRY, boxColour, boxColour, boxColour, boxColour, false);

//Draw the text
draw_set_halign(fa_left);
draw_set_font(fnt_tutorial);
draw_text_ext(textX, textY, text, font_get_size(fnt_tutorial) + (font_get_size(fnt_tutorial)/2), boxRX - x - padding);

draw_set_halign(fa_center);
var cont = "Please press this box to continue...";
draw_text(boxRX - (string_width(cont) * 1.2), boxRY - padding - font_get_size(fnt_tutorial), cont);

if(window_view_mouse_get_x(0) &gt;= x + view_xview[0] &amp;&amp; window_view_mouse_get_y(0) &gt;= y + view_yview[0] &amp;&amp; window_view_mouse_get_x(0) &lt;= boxRX + view_xview[0] &amp;&amp; window_view_mouse_get_y(0) + view_yview[0] &lt;= boxRY)
{
    draw_sprite(spr_mouse, 0, window_view_mouse_get_x(0) - view_xview[0], window_view_mouse_get_y(0) - view_yview[0]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
