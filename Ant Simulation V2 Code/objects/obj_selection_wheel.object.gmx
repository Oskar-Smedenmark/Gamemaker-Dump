<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>items[0] = obj_digable;
items[1] = noone;
items[2] = obj_collectableFood;
items[3] = obj_nest_area;
enum orders
{
    dig,
    nest,
    collect,
    foodArea
}
selected = 0;

showButtons = false;

buttonSprite[0] = spr_dig_button;
buttonSprite[1] = spr_nest_button;
buttonSprite[2] = spr_collect_button;
buttonSprite[3] = spr_food_area;

buttonDistance = 128;
buttonCount = array_length_1d(buttonSprite);
buttonSectionSize = 360/buttonCount;
buttonXpos[0] = 0;
buttonYpos[0] = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selection change
if(mouse_check_button_pressed(mb_right))
{
    showButtons = true;
}
if(mouse_check_button_released(mb_right))
{
    showButtons = false;
}
if(mouse_check_button(mb_right))
{
    if(mouse_wheel_up())
    {
        selected++;
        if(selected &gt;= array_length_1d(items))
        {
            selected = 0;   
        }   
    }
    if(mouse_wheel_down())
    {
        selected--;
        if(selected &lt; 0)
        {
            selected = array_length_1d(items)-1;   
        }   
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select with keyboard
if(keyboard_check_pressed(ord('1')))
{
    selected = 0;
}
if(keyboard_check_pressed(ord('2')))
{
    selected = 1;
}
if(keyboard_check_pressed(ord('3')))
{
    selected = 2;
}
if(keyboard_check_pressed(ord('4')))
{
    selected = 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the buttons
if(showButtons)
{
    for(var i = 0; i &lt; buttonCount; i++)
    {
        buttonXpos[i] = window_get_width()/2 + lengthdir_x(buttonDistance, buttonSectionSize*i);
        buttonYpos[i] = window_get_height()/2 + lengthdir_y(buttonDistance, buttonSectionSize*i);
        draw_sprite(buttonSprite[i], 0, buttonXpos[i], buttonYpos[i]);
        if(i == selected)
        {
            draw_sprite(spr_selected, 0, buttonXpos[i], buttonYpos[i]);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the buttons
draw_text(mouse_x, mouse_y - 25, "SELECTED = " + string(selected));
/*if(showButtons)
{
    for(var i = 0; i &lt; buttonCount; i++)
    {
        buttonXpos[i] = obj_camera.x + lengthdir_x(buttonDistance, buttonSectionSize*i);
        buttonYpos[i] = obj_camera.y + lengthdir_y(buttonDistance, buttonSectionSize*i);
        draw_sprite(buttonSprite[i], 0, buttonXpos[i], buttonYpos[i]);
        if(i == selected)
        {
            draw_sprite(spr_selected, 0, buttonXpos[i], buttonYpos[i]);
        }
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
