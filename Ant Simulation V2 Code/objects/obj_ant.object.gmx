<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
//Touchable
spd = 1; //Move speed
hp = 100; //Health
dmg = 10;

hunger = 100;   //Hunger status
thirst = 100;   //Thirst status
tiredness = 100;//Tiredness status

hungerDecrease = 0.1;
thirstDecrease = 0.2;

hungerMax = 100; //Maximum amount of hunger
thirstMax = 100; //Maximum amount of thirst
maxHp = 100;

hungerLimit = hungerMax/2; //Limit until the ant searches for food
thirstLimit = thirstMax/2; //Limit until the ant searches for water

state = states.idle; //Current state
image_speed = 0.25; //Animation speed

statusTime = room_speed*2; //How often should statuses be affected

failedMargin = room_speed*1; //If you couldn't find what you searched for wait for about this time
failedTime = room_speed + irandom(failedMargin); //How often should you check for what you searched for
statusFailedTime = room_speed + irandom(failedMargin); //How often should you check for what you searched for

hungerIncTime = room_speed*0.2; //How fast the ant eats
waterIncTime = room_speed*0.2;  //How fast the ant drink

walkingSoundCounter = room_speed/4 + irandom(30);

edDistance = 16; //Eating and Drinking Distance

scoutChance = 10; //Chance to become a scout
scoutRange = 200; //Longest move length per path

//Untouchable
path = path_add(); //The path

target = noone; //Target ant goes to
threat = noone; //Threat ant has seen
goingToTarget = false; //If ant is going to target
xTo = x; //X to go to
yTo = y; //Y to go to

statusCounter = statusTime; //Counter for statusTime
failedCounter = failedTime; //Counter for failed try
statusFailedCounter = statusFailedTime; //Counter for failed status find

hungerIncCounter = hungerIncTime; //Counter for eating
waterIncCounter = waterIncTime; //Counter for drinking

isScout = false;

ds_list_add(obj_world_controller.aliveAnts, id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Walking sound, speed update and image_angle
image_angle = direction;
walkingSoundCounter--;
if(walkingSoundCounter &lt;= 0)
{
    walkingSoundCounter = room_speed/4 + irandom(30);
    audio_sound_pitch(snd_walk, random_range(0.3, 1.6));
    audio_play_sound(snd_walk, 1, false);
}
path_speed = spd / global.gameSpeed;
if(isScout)
{
    sprite_index = spr_scout;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Status updates
//Update statuses
statusCounter -= 1 / global.gameSpeed;
if(statusCounter &lt;= 0)
{
    statusCounter = statusTime;
    hunger -= hungerDecrease;
    thirst -= thirstDecrease;
    if(thirst &lt;= 0)
    {
        thirst = 0;
        hp--;
    }
    else if(thirst &gt;= thirstMax/2)
    {
        if(hp &lt; maxHp)
        {
            hp += 0.5;
        }
    }
    if(hunger &lt;= 0)
    {
        hunger = 0;
        hp--;
    }
    else if(hunger &gt;= hungerMax/2)
    {
        if(hp &lt; maxHp)
        {
            hp += 0.5;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dead check
if(hp &lt;= 0)
{
    ds_list_delete(obj_world_controller.aliveAnts, id);
    var ant = id;
    with(obj_collectableFood)
    {
        var ind = ds_list_find_index(antsCarrying, ant);
        if(ind != -1)
        {
            ds_list_delete(antsCarrying, ind);
        }
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//draw_text(x, y - 30, string(id));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
