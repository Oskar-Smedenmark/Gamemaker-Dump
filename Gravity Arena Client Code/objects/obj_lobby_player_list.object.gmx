<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>buffer_seek(global.buffer, buffer_seek_start, 0);
buffer_write(global.buffer, buffer_u8, type.lobbyList);
network_send_packet(obj_controller.socket, global.buffer, buffer_tell(global.buffer));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_ltgray);
draw_set_halign(fa_left);
draw_set_font(fnt_stats);
if(!instance_exists(obj_loading_screen))
{
    switch(global.gamemode)
    {
        case "ffa":
            
            draw_rectangle(10, 10, window_get_width()/4, 60 + 40*instance_number(obj_lobby_player), false);
            draw_set_colour(c_black);
            draw_text(25, 20, "NAME");
            draw_line(9, 26, window_get_width()/4, 26);
            draw_text(25, 40, global.name);
            var player = noone;
            for(var i = 0; i &lt; instance_number(obj_lobby_player); i++)
            {
                player = instance_find(obj_lobby_player, i);
                if(instance_exists(player))
                {
                    draw_text(25, 60 + 20 * i, player.name);
                }
            }
        break;
        
        case "race":
            draw_sprite_ext(spr_lobby_player_list, 0, 10, 10, 1, 1, 0, c_white, 1);
            //draw_rectangle(10, 10, window_get_width()/4, 60 + 40*instance_number(obj_lobby_player), false);
            draw_set_colour(c_black);
            draw_text(25, 30, "NAME");
            //draw_line(9, 26, window_get_width()/4, 26);
            draw_text(25, 50, global.name);
            var player = noone;
            for(var i = 0; i &lt; instance_number(obj_lobby_player); i++)
            {
                player = instance_find(obj_lobby_player, i);
                if(instance_exists(player))
                {
                    draw_text(25, 60 + 20 * i, player.name);
                }
            }
        break;
        
        case "td":
            draw_rectangle(10, 10, window_get_width()/4, 80 + 40*instance_number(obj_lobby_player), false);
            draw_rectangle(window_get_width() - 10, 10, window_get_width()/2 + window_get_width()/4, 80 + 40*instance_number(obj_lobby_player), false);
            draw_set_colour(c_black);
            draw_text(25, 20, "TEAM BLUE");
            draw_line(9, 26, window_get_width()/4, 26); 
            draw_text(25, 40, "NAME");
            draw_line(9, 46, window_get_width()/4, 46);
            draw_text(window_get_width()/2 + window_get_width()/4 + 25, 20, "TEAM RED");
            draw_line(window_get_width()/2 + window_get_width()/4 - 1, 26, window_get_width() - 10, 26); 
            draw_text(window_get_width()/2 + window_get_width()/4 + 25, 40, "NAME");
            draw_line(window_get_width()/2 + window_get_width()/4 - 1, 46, window_get_width() - 10, 46); 
            var player = noone;
            switch(global.team)
            {
                case "Blue":
                    draw_text(25, 60, global.name);
                break;
            
                case "Red":
                    draw_text(window_get_width()/2 + window_get_width()/4 + 25, 60, global.name);
                break;
            }
            var bM = 0;
            var rM = 0;
            for(var i = 0; i &lt; instance_number(obj_lobby_player); i++)
            {
                player = instance_find(obj_lobby_player, i);
                if(instance_exists(player))
                {
                    switch(player.team)
                    {
                        case "Blue":
                            if(global.team == "Blue")
                            {
                                draw_text(25, 80 + 20 * bM, player.name);
                            }
                            else
                            {
                                draw_text(25, 60 + 20 * bM, player.name);
                            }
                            bM++;
                        break;
                        
                        case "Red":
                            if(global.team == "Red")
                            {
                                draw_text(window_get_width()/2 + window_get_width()/4 + 25, 80 + 20 * rM, player.name);
                            }
                            else
                            {
                                draw_text(window_get_width()/2 + window_get_width()/4 + 25, 60 + 20 * rM, player.name);
                            }
                            rM++;
                        break;
                    }
                }
            }
        break;  
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
